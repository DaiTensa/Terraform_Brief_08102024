{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project layout","text":""},{"location":"#explanation-of-the-different-steps-for-creating-resources","title":"Explanation of the Different Steps for Creating Resources","text":""},{"location":"#setting-up-your-environment","title":"Setting Up Your Environment:","text":"<p>Install Terraform and ensure you have access to the Azure CLI. Configure your Azure account and set the necessary permissions to deploy resources.</p>"},{"location":"#creating-a-terraform-configuration-file","title":"Creating a Terraform Configuration File:","text":"<p>Define the required provider (azurerm) in your <code>provider.tf</code> file, specifying the source and version. Set up the provider configuration with your Azure subscription ID and other necessary settings.</p> <pre><code># Define the required Terraform providers\nterraform {\n  required_providers {\n    # Specify the Azure Resource Manager provider\n    azurerm = {\n      source = \"hashicorp/azurerm\"\n      version = \"4.4.0\"\n    }\n  }\n}\n\n# Configure the Azure Resource Manager provider\nprovider \"azurerm\" {\n  # Configuration options\n  features {\n\n    # Configuration for virtual machine settings\n    virtual_machine {\n      detach_implicit_data_disk_on_deletion = false\n      delete_os_disk_on_deletion            = true\n      graceful_shutdown                     = false\n      skip_shutdown_and_force_delete        = false\n    }\n\n  }\n\n  # Specify the Azure subscription ID to use for resource management\n  subscription_id = var.subscription_id\n\n}\n</code></pre>"},{"location":"#defining-variables","title":"Defining Variables:","text":"<p>Create a <code>variables.tf</code> file to define the required variables such as resource_group_name, location, vm_name, and others. Assign values to these variables, either directly in the configuration file, through a .tfvars file, or via environment variables.</p> <pre><code># Define a variable for the resource group name\nvariable \"resource_group_name\" {\n  # Description of the variable's purpose\n  description = \"The name of the resources group\"\n\n  # Specify the type of the variable as a string\n  type        = string\n}\n\n# Define a variable for the Azure region where resources will be deployed\nvariable \"location\" {\n  # Description of the variable's purpose\n  description = \"The Azure region to deploy resources\"\n\n  # Specify the type of the variable as a string\n  type        = string\n}\n</code></pre>"},{"location":"#creating-resources","title":"Creating Resources:","text":"<p>Write the configuration for each resource you want to deploy:</p> <ul> <li>Virtual Machine (VM): Define the VM resource with attributes such as name, size, admin credentials, and network interface.</li> <li>Storage Account: Create a storage account to manage files and data.</li> <li>Blob Container: Set up a Blob Container within the storage account to store your files.</li> <li>Web App: Configure a Web App to expose your results or services.</li> </ul>"},{"location":"#running-terraform-commands","title":"Running Terraform Commands:","text":"<p>Initialize your Terraform workspace using </p> <pre><code>terraform init\n</code></pre> <p>Plan the deployment to see what resources will be created using terraform plan.</p> <pre><code>terraform plan -var-file=\"terraform.tfvars\" \n</code></pre> <p>Apply the configuration to deploy the resources with terraform apply.</p> <pre><code>terraform apply -var-file=\"terraform.tfvars\"\n</code></pre>"},{"location":"storage/","title":"Storage Module","text":""},{"location":"storage/#overview","title":"Overview","text":"<p>This module is responsible for creating an Azure storage account.</p>"},{"location":"storage/#steps","title":"Steps","text":"<ul> <li>Step 1: Configure the storage account.</li> <li>Step 2: Create a Blob Container.</li> </ul>"},{"location":"vm/","title":"Terraform Configuration for Azure Linux Virtual Machine","text":"<p>Terraform code used to create an Azure Linux Virtual Machine (VM).  The configuration utilizes the <code>azurerm_linux_virtual_machine</code> resource.</p>"},{"location":"vm/#resource-block-definition","title":"Resource Block Definition","text":"<p>The following Terraform code defines a resource block for creating an Azure Linux Virtual Machine:</p> <pre><code>resource \"azurerm_linux_virtual_machine\" \"example\" {\n  name                = var.vm_name\n  resource_group_name = var.resource_group_name\n  location            = var.location\n  size                = \"Standard_B1s\"\n  admin_username      = var.admin_username\n  admin_password      = var.admin_password\n\n  network_interface_ids = [format(\n    \"/subscriptions/%s/resourceGroups/%s/providers/Microsoft.Network/networkInterfaces/%s\",\n    var.subscription_id,\n    var.resource_group_name,\n    var.network_interface_name\n  )]\n\n  disable_password_authentication = false\n\n  os_disk {\n    caching                = \"ReadWrite\"\n    storage_account_type   = \"Standard_LRS\"\n  }\n\n  source_image_reference {\n    publisher = \"Canonical\"\n    offer     = \"UbuntuServer\"\n    sku       = \"18.04-LTS\"\n    version   = \"latest\"\n  }\n}\n</code></pre>"},{"location":"webapp/","title":"Terraform Configuration for Azure Linux Web App","text":"<p>Terraform code used to create an Azure Linux Web App.  The configuration utilizes the <code>azurerm_linux_web_app</code> resource.</p>"},{"location":"webapp/#resource-block-definition","title":"Resource Block Definition","text":"<p>The following Terraform code defines a resource block for creating an Azure Linux Web App:</p> <pre><code>resource \"azurerm_linux_web_app\" \"example\" {\n  name                = var.webb_app_name\n  resource_group_name = var.resource_group_name\n  location            = var.location\n  service_plan_id     = var.service_plan_id\n\n  site_config {}\n}\n</code></pre>"}]}